"""
'c in n1' : loop through each character 'c' in n1
'ord(c)' : convert each character into its corresponding ASCII value (or unicode point). For example, ord('A') is 65
'sum(...)' : adds up all values generated by 'ord(c)'
'abs(...)' : return absolute value. For example 'abs(3-4)' give result to 1 (absolute value is positive value of a number)
'% 101' : make sure the result stays within range of 0 - 100. For example, 'abs(sum_n1 - sum_n2) = 102, then 102 % 101 is 1 (the remainder)
"""
def calculate_love_score(n1,n2):
    sum_n1 = sum(ord(c) for c in n1)
    sum_n2 = sum(ord(c) for c in n2)
    
    # score is based on the different between 'sum_n1' and 'sum_n2/
    the_score = abs(sum_n1 - sum_n2) % 101
    # print(f"This is the score: {the_score}") # optional, you can see the value of 'the_score' here
    return the_score

# start the project here
def start_the_love():
    print("\n== Love Compatibility Calculator ==\n")
    print("... where numbers tell you if it's true love,.. or just bad Wi-Fi ...")

    # get a person's name
    seeker_name = input("\n> What is your first name: ")

    # get the person's crush name
    seeker_crush_name = input("\n> What is your crush first name : ")

    # calculate score based on the names
    score = calculate_love_score(seeker_name,seeker_crush_name)

    # prince love 'score'
    print(f"\n\n> Your love score is {score}%")
    print("\n=================================\n")

# check if there's python program running
if __name__ == "__main__":
    start_the_love()